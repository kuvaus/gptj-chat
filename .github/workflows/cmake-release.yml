name: CMake-release

on:
  push:
    tags:
      - 'v*'
      
env:
  BUILD_TYPE: Release

permissions:
  contents: read
  actions: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
          
    steps:
    - uses: actions/checkout@v3
      with:
          submodules: recursive
        
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Rename binary
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: mv ${{github.workspace}}/build/bin/chat ${{github.workspace}}/build/bin/chat-${{ matrix.os }}
      
    - name: Rename and move binary for Windows
      if: matrix.os == 'windows-latest'
      run: |
        Move-Item -Path ${{github.workspace}}/build/bin/Release/chat.exe -Destination ${{github.workspace}}/build/bin/chat-${{ matrix.os }}.exe

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
    
    - name: Upload binaries
      uses: actions/upload-artifact@v3
      with:
        name: binaries-${{ matrix.os }}
        path: ${{github.workspace}}/build/bin/chat-${{ matrix.os }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Create directories for binaries
        run: mkdir -p build/binaries

      - name: Download built binaries
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_KEY }}
        run: |
          for os in ubuntu-latest macos-latest windows-latest; do
            echo "Downloading binaries for $os"
            gh run download --repo ${{ github.repository }} --name "binaries-$os"
          done
          ls -R build/binaries

      - name: List contents of build/binaries
        run: ls -R build/binaries

      - name: Upload the artifacts
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_KEY }}
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          files: |
            ${{github.workspace}}/build/binaries/*

